@page
@model ARS_FE.Pages.UserPage.BookingManager.DetailsModel
@{
    ViewData["Title"] = "Ticket Details";
    Layout = "_LayoutUser";
}
<div class="card mb-4">
    <div class="card-header">
        <h4>Flight Information</h4>
    </div>
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-3">Airline</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Flight.Airlines)</dd>

            <dt class="col-sm-3">Airplane Code</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Flight.AirplaneCode)</dd>

            <dt class="col-sm-3">Scheduled Departure Time</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Flight.DepartureTime)</dd>

            <dt class="col-sm-3">Scheduled Arrival Time</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Flight.ArrivalTime)</dd>

            <dt class="col-sm-3">From</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Flight.FromName)</dd>

            <dt class="col-sm-3">To</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Flight.ToName)</dd>

            <dt class="col-sm-3">Status</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Flight.Status)</dd>
        </dl>
    </div>
</div>
<div class="container mt-5">
    <h2 class="text-center mb-5">Ticket Details</h2>

    @if (Model.Tickets == null || !Model.Tickets.Any())
    {
        <div class="alert alert-info text-center">
            No tickets found for this booking.
        </div>
    }
    else
    {
        <table class="table table-bordered table-hover text-center">
            <thead class="bg-primary text-white">
                <tr>
                    <th>Class</th>
                    <th>Price</th>
                    <th>Passenger Name</th>
                    <th>Gender</th>
                    <th>Date of Birth</th>
                    <th>Country</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ticket in Model.Tickets)
                {
                    <tr>
                        <td>@ticket.ClassName</td>
                        <td class="text-center">
                            @String.Format("{0:#,##0} VND", Convert.ToDecimal(ticket.ClassPrice))
                        </td>
                        <td>@ticket.FirstName @ticket.LastName</td>
                        <td>@ticket.Gender</td>
                        <td>@ticket.Dob.ToString("yyyy-MM-dd")</td>
                        <td>@ticket.Country</td>
                        <td>
                            @{
                                string statusClass = ticket.Status switch
                                {
                                    "Pending" => "badge bg-warning text-dark",
                                    "Paid" => "badge bg-success text-white",
                                    "Cancelled" => "badge bg-danger",
                                    _ => ""
                                };
                            }
                            <span class="@statusClass">@ticket.Status</span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        decimal totalAmount = Model.Tickets.Sum(t => Convert.ToDecimal(t.ClassPrice));
        decimal discountAmount = Model.Discount;
        decimal priceAfterDiscount = totalAmount * (100 - discountAmount) / 100;

        <div class="mt-4">
            <h5>Total Amount: @String.Format("{0:#,##0} VND", totalAmount)</h5>
            <h5>Discount: @discountAmount%</h5>
            <h5>Price After Discount: @String.Format("{0:#,##0} VND", priceAfterDiscount)</h5>
        </div>
    }
</div>
